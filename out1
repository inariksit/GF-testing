Preprocessing library for GF-testing-0.1.0.0..
Building library for GF-testing-0.1.0.0..
[6 of 7] Compiling GrammarC         ( src/GrammarC.hs, dist/build/GrammarC.o )
Preprocessing executable 'GF-testing-exe' for GF-testing-0.1.0.0..
Building executable 'GF-testing-exe' for GF-testing-0.1.0.0..
Linking dist/build/GF-testing-exe/GF-testing-exe ...
Running GF-testing-exe...
A2: [9,10]
CN: [2,6]
CN: [3,7]
Card: [0,1,2,3]
Comp: [0,1,2,6,7,8]
Comp: [3,4,5,9,10,11]
Dig: [0,1,2,3]
Dig: [4,5,6]
Digit: [0,1,2,3]
Digit: [7,8,9,10]
Digit: [14,15,16,17]
Digits: [0,1,2,3]
Digits: [4,5,6]
IComp: [0,1,2,3,4,5,6,7,8,9,10,11]
IP: [0,1]
IQuant: [0,2,3]
Imp: [2,3]
Imp: [6,7]
ListRS: [1,3]
ListRS: [5,7]
N2: [4,5]
N3: [4,5]
N3: [6,7]
Numeral: [0,1,2,3]
PN: [0,1]
Predet: [0,1,2,3]
Quant: [2,3,4,6,7]
Quant: [11,12]
RCl: [1,3]
RCl: [5,7]
RCl: [9,11]
RCl: [13,15]
RCl: [17,19]
RCl: [21,23]
RCl: [25,27]
RCl: [29,31]
RCl: [33,35]
RCl: [37,39]
RCl: [41,43]
RCl: [45,47]
RCl: [49,51]
RCl: [53,55]
RCl: [57,59]
RCl: [61,63]
RP: [0,1,3]
RS: [1,3]
Sub10: [0,1,2,3]
Sub10: [7,8,9,10]
Sub10: [14,15,16,17]
Sub100: [0,1,2,3]
Sub1000: [0,1,2,3]
Sub1000000: [0,1,2,3]
V: [0,1,5,10]
V: [2,8]
V: [3,4,9]
V: [14,15]
V2: [0,5,10]
V2: [2,8]
V2: [4,9]
V2: [14,15]
V2A: [0,1,5,10]
V2A: [2,8]
V2A: [3,4,9]
V2A: [14,15,16,17]
V2Q: [0,1,5,10]
V2Q: [2,8]
V2Q: [3,4,9]
V2Q: [14,15,16,17]
V2S: [0,1,5,10]
V2S: [2,8]
V2S: [3,4,9]
V2S: [14,15,16,17]
V2V: [0,1,5,10]
V2V: [2,8]
V2V: [3,4,9]
V2V: [14,15,16,17]
V3: [0,5,10]
V3: [2,8]
V3: [3,4,9]
V3: [14,15]
V3: [16,17]
VA: [0,1,5,10]
VA: [2,8]
VA: [3,4,9]
VA: [14,15]
VP: [0,5]
VP: [21,27]
VP: [22,25,28,31]
VP: [23,26,29,32]
VP: [24,30]
VP: [33,39]
VP: [34,40]
VP: [35,41]
VP: [36,42]
VP: [37,43]
VP: [38,44]
VPSlash: [0,5]
VPSlash: [23,29]
VPSlash: [24,27,30,33]
VPSlash: [25,28,31,34]
VPSlash: [26,32]
VPSlash: [35,41]
VPSlash: [36,42]
VPSlash: [37,43]
VPSlash: [38,44]
VPSlash: [39,45]
VPSlash: [40,46]
VQ: [0,5,10]
VQ: [2,8]
VQ: [3,4,9]
VS: [0,1,5,10]
VS: [2,8]
VS: [3,4,9]
VS: [14,15]
VV: [0,1,5,10]
VV: [2,4,8]
VV: [14,15]
### DetQuant : Quant_175 → Num_133 → Det_23
DetQuant IndefArt NumSg


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_23 (UseN worm_N)))
  --> er is [Det_23] worm
  --> er is een worm

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_23 (UseN year_N)))
  --> er is [Det_23] jaar
  --> er is een jaar

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_23))
  --> er is [Det_23]
  --> er is een



### DetQuant : Quant_175 → Num_134 → Det_23
DetQuant IndefArt (NumCard (NumDigits (IDig D_1)))


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_23 (UseN worm_N)))
  --> er is [Det_23] worm
  --> er is 1 worm

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_23 (UseN year_N)))
  --> er is [Det_23] jaar
  --> er is 1 jaar

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_23))
  --> er is [Det_23]
  --> er is 1



### DetQuant : Quant_176 → Num_133 → Det_24
DetQuant (PossPron i_Pron) NumSg


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_24 (UseN worm_N)))
  --> er is [Det_24] worm
  --> er is mijn worm

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_24 (UseN year_N)))
  --> er is [Det_24] jaar
  --> er is mijn jaar

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_24))
  --> er is [Det_24]
  --> er is het mijne



### DetQuant : Quant_176 → Num_133 → Det_24
DetQuant DefArt NumSg


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_24 (UseN worm_N)))
  --> er is [Det_24] worm
  --> er is de worm

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_24 (UseN year_N)))
  --> er is [Det_24] jaar
  --> er is het jaar

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_24))
  --> er is [Det_24]
  --> er is die



### DetQuant : Quant_176 → Num_134 → Det_24
DetQuant (PossPron i_Pron) (NumCard (NumDigits (IDig D_1)))


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_24 (UseN worm_N)))
  --> er is [Det_24] worm
  --> er is mijn 1 worm

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_24 (UseN year_N)))
  --> er is [Det_24] jaar
  --> er is mijn 1 jaar

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_24))
  --> er is [Det_24]
  --> er is mijn 1



### DetQuant : Quant_176 → Num_134 → Det_24
DetQuant DefArt (NumCard (NumDigits (IDig D_1)))


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_24 (UseN worm_N)))
  --> er is [Det_24] worm
  --> er is de 1 worm

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_24 (UseN year_N)))
  --> er is [Det_24] jaar
  --> er is het 1 jaar

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_24))
  --> er is [Det_24]
  --> er is het 1



### DetQuant : Quant_178 → Num_133 → Det_26
DetQuant this_Quant NumSg


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_26 (UseN worm_N)))
  --> er is [Det_26] worm
  --> er is deze worm

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_26 (UseN year_N)))
  --> er is [Det_26] jaar
  --> er is dit jaar

- UseCl (TTAnt TPres ASimul) PPos (GenericCl (ComplSlash (SlashV2a write_V2) (DetNP Det_26)))
  --> men schrijft [Det_26]
  --> men schrijft hier

- UseCl (TTAnt TPres ASimul) PPos (PredVP (DetNP Det_26) UseCopula)
  --> [Det_26] is
  --> dit is



### DetQuant : Quant_178 → Num_134 → Det_26
DetQuant this_Quant (NumCard (NumDigits (IDig D_1)))


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_26 (UseN worm_N)))
  --> er is [Det_26] worm
  --> er is deze 1 worm

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_26 (UseN year_N)))
  --> er is [Det_26] jaar
  --> er is dit 1 jaar

- UseCl (TTAnt TPres ASimul) PPos (GenericCl (ComplSlash (SlashV2a write_V2) (DetNP Det_26)))
  --> men schrijft [Det_26]
  --> men schrijft hier

- UseCl (TTAnt TPres ASimul) PPos (PredVP (DetNP Det_26) UseCopula)
  --> [Det_26] is
  --> dit 1 is



### DetQuant : Quant_175 → Num_135 → Det_27
DetQuant IndefArt NumPl


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_27 (UseN worm_N)))
  --> er is [Det_27] worm
  --> er zijn wormen

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_27 (UseN year_N)))
  --> er is [Det_27] jaar
  --> er zijn jaren

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_27))
  --> er is [Det_27]
  --> er zijn een



### DetQuant : Quant_175 → Num_136 → Det_27
DetQuant IndefArt (NumCard (NumDigits (IDig D_9)))


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_27 (UseN worm_N)))
  --> er is [Det_27] worm
  --> er zijn 9 wormen

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_27 (UseN year_N)))
  --> er is [Det_27] jaar
  --> er zijn 9 jaren

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_27))
  --> er is [Det_27]
  --> er zijn 9



### DetQuant : Quant_176 → Num_135 → Det_28
DetQuant (PossPron i_Pron) NumPl


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_28 (UseN worm_N)))
  --> er is [Det_28] worm
  --> er zijn mijn wormen

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_28 (UseN year_N)))
  --> er is [Det_28] jaar
  --> er zijn mijn jaren

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_28))
  --> er is [Det_28]
  --> er zijn de mijnen



### DetQuant : Quant_176 → Num_135 → Det_28
DetQuant DefArt NumPl


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_28 (UseN worm_N)))
  --> er is [Det_28] worm
  --> er zijn de wormen

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_28 (UseN year_N)))
  --> er is [Det_28] jaar
  --> er zijn de jaren

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_28))
  --> er is [Det_28]
  --> er zijn die



### DetQuant : Quant_176 → Num_136 → Det_28
DetQuant (PossPron i_Pron) (NumCard (NumDigits (IDig D_9)))


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_28 (UseN worm_N)))
  --> er is [Det_28] worm
  --> er zijn mijn 9 wormen

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_28 (UseN year_N)))
  --> er is [Det_28] jaar
  --> er zijn mijn 9 jaren

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_28))
  --> er is [Det_28]
  --> er zijn mijn 9



### DetQuant : Quant_176 → Num_136 → Det_28
DetQuant DefArt (NumCard (NumDigits (IDig D_9)))


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_28 (UseN worm_N)))
  --> er is [Det_28] worm
  --> er zijn de 9 wormen

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_28 (UseN year_N)))
  --> er is [Det_28] jaar
  --> er zijn de 9 jaren

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_28))
  --> er is [Det_28]
  --> er zijn de 9



### DetQuant : Quant_178 → Num_135 → Det_30
DetQuant this_Quant NumPl


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_30 (UseN worm_N)))
  --> er is [Det_30] worm
  --> er zijn deze wormen

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_30 (UseN year_N)))
  --> er is [Det_30] jaar
  --> er zijn deze jaren

- UseCl (TTAnt TPres ASimul) PPos (GenericCl (ComplSlash (SlashV2a write_V2) (DetNP Det_30)))
  --> men schrijft [Det_30]
  --> men schrijft hier

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_30))
  --> er is [Det_30]
  --> er zijn deze



### DetQuant : Quant_178 → Num_136 → Det_30
DetQuant this_Quant (NumCard (NumDigits (IDig D_9)))


- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_30 (UseN worm_N)))
  --> er is [Det_30] worm
  --> er zijn deze 9 wormen

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetCN Det_30 (UseN year_N)))
  --> er is [Det_30] jaar
  --> er zijn deze 9 jaren

- UseCl (TTAnt TPres ASimul) PPos (GenericCl (ComplSlash (SlashV2a write_V2) (DetNP Det_30)))
  --> men schrijft [Det_30]
  --> men schrijft hier

- UseCl (TTAnt TPres ASimul) PPos (ExistNP (DetNP Det_30))
  --> er is [Det_30]
  --> er zijn deze 9




